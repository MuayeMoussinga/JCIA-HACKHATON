from PIL import Image
import numpy as np
import cv2
from ultralytics import YOLO
import os

# 1. Charger l'image avec Pillow
pil_image = Image.open("chemin/vers/image.jpg")

# 2. Convertir PIL → OpenCV (BGR)
opencv_image = cv2.cvtColor(np.array(pil_image), cv2.COLOR_RGB2BGR)

# 3. Charger le modèle YOLO
model = YOLO("best.pt")

# 4. Faire la prédiction
results = model(opencv_image)
result = results[0]
boxes = result.boxes
names = model.names

# 5. Dessiner les détections : classe, id, score
for box in boxes:
    x1, y1, x2, y2 = map(int, box.xyxy[0])
    conf = float(box.conf[0])
    cls_id = int(box.cls[0])
    label = f"{names[cls_id]} (ID:{cls_id}) {conf:.2f}"

    cv2.rectangle(opencv_image, (x1, y1), (x2, y2), (0, 255, 0), 2)
    cv2.putText(opencv_image, label, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX,
                0.5, (0, 255, 0), 2)

# 6. Enregistrer l'image annotée
os.makedirs("resultats", exist_ok=True)
output_path = "resultats/image_annotee.jpg"
cv2.imwrite(output_path, opencv_image)

# 7. Recharger l'image avec Pillow et l'afficher
annotated = cv2.imread(output_path)
annotated_rgb = cv2.cvtColor(annotated, cv2.COLOR_BGR2RGB)
annotated_pil = Image.fromarray(annotated_rgb)
annotated_pil.show()